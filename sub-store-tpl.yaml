proxy-groups:
    - { name: 🚀 默认代理, type: select, proxies: [🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🛑 广告, type: select, proxies: [REJECT, 直连, 🚀 默认代理, 🌐 全部节点]}
    - { name: 🎯 直连, type: select, proxies: [直连, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点]}
    - { name: 📹 YouTube, type: select, proxies: [🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🍀 Google, type: select, proxies: [🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🤖 AI, type: select, proxies: [🇸🇬 新加坡, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🍎 Apple, type: select, proxies: [🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🍎 Apple 中国, type: select, proxies: [直连, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点]}
    - { name: 🐬 OneDrive, type: select, proxies: [🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🪟 Microsoft, type: select, proxies: [🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🪟 Microsoft 中国, type: select, proxies: [直连, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点]}
    - { name: 🎵 TikTok, type: select, proxies: [ 🇯🇵 日本, 🚀 默认代理, 🇭🇰 香港, 🇸🇬 新加坡, 🇹🇼 台湾,🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 📲 Telegram, type: select, proxies: [🇸🇬 新加坡, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🎥 NETFLIX, type: select, proxies: [🇸🇬 新加坡, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 👨🏿‍💻 GitHub, type: select, proxies: [🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🎮 游戏平台, type: select, proxies: [🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
    - { name: 🎮 游戏下载, type: select, proxies: [直连, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点]}
    - { name: ✈️ Speedtest, type: select, proxies: [直连, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点]}
    - { name: 🐟 漏网之鱼, type: select, proxies: [🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
  
    - { name: 🇭🇰 香港, type: select, proxies: [🔁 🇭🇰 香港故转, 🌐 🇭🇰 香港自动, ✅ 🇭🇰 香港手动]}
    - { name: 🇸🇬 新加坡, type: select, proxies: [🔁 🇸🇬 新加坡故转, 🌐 🇸🇬 新加坡自动, ✅ 🇸🇬 新加坡手动]}
    - { name: 🇹🇼 台湾, type: select, include-all: true, filter: "台湾"}
    - { name: 🇯🇵 日本, type: select, include-all: true, filter: "日本"}
    - { name: 🇺🇸 美国, type: select, include-all: true, filter: "美国"}
    - { r, name: 🇺🇳 其它, type: select, include-all: true, filter: "其它"}
  
    - { name: ✅ 🇭🇰 香港手动, type: select, include-all: true, filter: "香港"}
    - { name: 🔁 🇭🇰 香港故转, type: fallback, tolerance: 20, interval: 300, include-all: true, filter: "香港"}
    - { name: 🌐 🇭🇰 香港自动, type: url-test, tolerance: 20, interval: 300, include-all: true, filter: "香港"}
  
    - { name: ✅ 🇸🇬 新加坡手动, type: select, include-all: true, filter: "新加坡"}
    - { name: 🔁 🇸🇬 新加坡故转, type: fallback, tolerance: 20, interval: 300, include-all: true, filter: "新加坡"}
    - { name: 🌐 🇸🇬 新加坡自动, type: url-test, tolerance: 20, interval: 300, include-all: true, filter: "新加坡"}
  
    - {name: 🌐 全部节点, type: select, include-all: true}
  
rules:
  - RULE-SET,my_direct,🎯 直连
  - RULE-SET,my_block,🛑 广告
  - RULE-SET,my_proxy_sg,🚀 默认代理
  - RULE-SET,my_proxy,🚀 默认代理
  - RULE-SET,ads_domain,🛑 广告
  - RULE-SET,private_ip,🎯 直连,no-resolve
  - RULE-SET,private_domain,直连
  - RULE-SET,apple_cn_domain,🍎 Apple 中国
  - RULE-SET,icloud_cn_domain,🍎 Apple 中国
  - RULE-SET,apple_domain,🍎 Apple
  - RULE-SET,icloud_domain,🍎 Apple
  - RULE-SET,ai,🤖 AI
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,google_domain,🍀 Google
  # - RULE-SET,facebook_ip,🚀 默认代理,no-resolve
  # - RULE-SET,facebook_domain,🚀 默认代理
  # - RULE-SET,twitter_ip,🚀 默认代理,no-resolve
  # - RULE-SET,twitter_domain,🚀 默认代理
  # - RULE-SET,github_domain,🚀 默认代理
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_cn_domain,🪟 Microsoft 中国
  - RULE-SET,bing_cn_domain,🪟 Microsoft 中国
  - RULE-SET,microsoft_domain,🪟 Microsoft
  - RULE-SET,bing_domain,🪟 Microsoft
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,games_cn_domain,🎯 直连
  - RULE-SET,games_download_domain,🎮 游戏下载
  - RULE-SET,games_domain,🎮 游戏平台
  - RULE-SET,porn_domain,🚀 默认代理
  - RULE-SET,porn_class_domain,🚀 默认代理
  - RULE-SET,gfw_domain,🚀 默认代理
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,bank_cn_domain,🎯 直连
  - RULE-SET,cn_domain,🎯 直连
  - RULE-SET,cn_ip,🎯 直连
  - MATCH,🐟 漏网之鱼

  rule-providers:

  # 私有
  private_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  private_ip: { type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}

  # my rules
  my_proxy: { type: http, interval: 86400, behavior: classical, format: text, url: "https://ghfast.top/https://github.com/q3boy/meta-rules/raw/refs/heads/main/use-proxy.list"}
  my_proxy_sg: { type: http, interval: 86400, behavior: classical, format: text, url: "https://ghfast.top/https://github.com/q3boy/meta-rules/raw/refs/heads/main/use-proxy-sg.list"}
  my_direct: { type: http, interval: 86400, behavior: classical, format: text, url: "https://ghfast.top/https://github.com/q3boy/meta-rules/raw/refs/heads/main/direct.list"}
  my_block: { type: http, interval: 86400, behavior: classical, format: text, url: "https://ghfast.top/https://github.com/q3boy/meta-rules/raw/refs/heads/main/block.list"}

  # proxylite: { type: http, interval: 86400, behavior: classical, format: text, url: "https://ghfast.top/https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/ProxyLite.list"}


  # AI 服务
  ai: {  type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-chat-!cn.mrs" }

  # youtube
  youtube_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}

  # google
  google_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  google_ip: { type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}

  # facebook
  facebook_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/facebook.mrs"}
  facebook_ip: { type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/facebook.mrs"}

  # twitter
  twitter_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.mrs"}
  twitter_ip: { type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.mrs"}

  # github
  github_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}

  # telegram
  telegram_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  telegram_ip: { type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}

  # netflix
  netflix_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  netflix_ip: { type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}

  # paypal
  paypal_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}

  # onedrive
  onedrive_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}

  # microsoft
  microsoft_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  microsoft_cn_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft@cn.mrs"}
  bing_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bing.mrs"}
  bing_cn_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bing@cn.mrs"}

  # apple
  apple_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  apple_cn_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple@cn.mrs"}
  # icloud
  icloud_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/icloud.mrs"}
  icloud_cn_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/icloud@cn.mrs"}


  # speedtest
  speedtest_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}

  # tiktok
  tiktok_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}

  # gfw
  gfw_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}

  # 非中国
  geolocation-!cn: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}

  # 中国
  cn_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}

  # 银行
  bank_cn_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-bank-cn.mrs" }

  # 游戏
  games_domain: {  type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-games.mrs" }

  # 游戏 中国
  games_cn_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-games@cn.mrs" }

  # 游戏 下载
  games_download_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-game-accelerator-cn.mrs" }

  # 色情
  porn_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-porn.mrs" }
  porn_class_domain: { type: http, interval: 86400, behavior: classical, format: text, url: "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/classical/category-porn.list" }

  # 广告
  ads_domain: { type: http, interval: 86400, behavior: domain, format: mrs, url: "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ads-all.mrs" }

# mrs 转换: mihomo convert-ruleset [domain|ip] [yaml|text] source.yaml tartet.mrs