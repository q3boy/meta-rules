# 机场订阅
proxy-providers:
  ByWave:
    url: "{{BYWAVE_SUBSCRIPTION_URL}}"
    path: "./proxies/bywave.yaml"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    header:
      User-Agent:
        - "Clash"
        - "mihomo"
        - "Clash.meta"
    override:
      udp: true
      down: "1000 Mbps"
      up: "50 mbps"
      skip-cert-verify: true
  SsrDog:
    url: "{{SSRDOG_SUBSCRIPTION_URL}}"
    path: "./proxies/ssrdog.yaml"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    header:
      User-Agent:
        - "Clash"
        - "mihomo"
        - "Clash.meta"
    override:
      udp: true
      down: "1000 Mbps"
      up: "50 mbps"
      skip-cert-verify: true
# 节点信息
proxies:
  - {name: 直连, type: direct, udp: true}

# 全局配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
mode: "rule"
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 3600
keep-alive-interval: 60
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true


# 数据库
# geodata-loader: standard
# geodata-loader: memconservative
# geodata-mode: true
# geodata-mode: false
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geoip: "{{GHPROXY_URL}}https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "{{GHPROXY_URL}}https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "{{GHPROXY_URL}}https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"
  asn: "{{GHPROXY_URL}}https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

# 控制面板
external-controller: 0.0.0.0:9090
secret: "{{MY_SECRET_KEY}}"
external-ui: "/etc/mihomo/run/ui"
external-ui-name: zashboard
external-ui-url: "{{GHPROXY_URL}}https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "rule-set:private_domain,cn_domain"
    - "dlg.io.mi.com"
    - "+.q3boy.com"
    - "+.push.apple.com"
    - "+.apple.com"
    - "+.wechat.com"
    - "+.tencent.com"
    - "+.qpic.cn"
    - "+.qq.com"
    - "+.wechatapp.com"
    - "+.vivox.com"
    - "+.jd.com"
    - "+.360buyingimg.com"
    - "+.taobao.com"
    - "+.tmall.com"
    - "+.aliyun.com"
    - "+.alipay.com"
    - "+.alicdn.com"
    - "+.alibaba.com"
    - "+.oray.com"
    - "+.sunlogin.net"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"

# 入站
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  mtu: 9000
  gso: false
  gso-max-size: 65536
  router-exclude-address-set:
    - "rule-set:cn_ip"

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: "28.0.0.1/8"
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.services.googleapis.cn"
    - "+.xn--ngstr-lra8j.com"
    - "time.*.com"
    - "+.pool.ntp.org"
    - "+.ntp.tencent.com"
    - "+.ntp1.aliyun.com"
    - "+.ntp.ntsc.ac.cn"
    - "+.cn.ntp.org.cn"
    - "+.q3boy.com"
  default-nameserver:
    - "223.5.5.5"
    - "119.29.29.29"
  direct-nameserver:
    - "223.5.5.5"
    - "119.29.29.29"
  direct-nameserver-follow-policy: false
  proxy-server-nameserver:
    # - "https://dns.alidns.com/dns-query"
    - "223.5.5.5"
    - "119.29.29.29"
  nameserver-policy:
    '+.baidu.com': '223.5.5.5'
    '+.qq.com': '119.29.29.29'
    '+.qpic.com': '119.29.29.29'
    '+.tencent.com': '119.29.29.29'
    "+.wechat.com": "119.29.29.29"
    "+.weixin.com": "119.29.29.29"
    "+.wechatapp.com": "119.29.29.29"
    '+.jd.com': '223.5.5.5'
    '+.360buyingimg.com': '223.5.5.5'
    '+.taobao.com': '223.5.5.5'
    '+.tmall.com': '223.5.5.5'
    '+.aliyun.com': '223.5.5.5'
    '+.alipay.com': '223.5.5.5'
    '+.alicdn.com': '223.5.5.5'
    "rule-set:cn_domain":
      - "223.5.5.5"
      - "119.29.29.29"
    "rule-set:gfw_domain,geolocation-!cn":
      - "tls://1.1.1.1#🚀 默认代理"
      - "tls://8.8.8.8#🚀 默认代理&h3=true"
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 202.101.172.35
    - 202.101.172.47
  fallback:
    - tls://1.1.1.1
    - tls://1.0.0.1
    - tls://8.8.8.8
    - tls://8.8.4.4
    - tls://223.5.5.5
    - tls://119.29.29.29
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4
    domain:
      - "+.google.com"
      - "+.facebook.com"
      - "+.telegram.com"
      - "+.t.me"
      - "+.x.com"
      - "+.twitter.com"
      - "+.youtube.com"
      - "+.github.com"

# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
anchors:
  pr: &pr {type: select, proxies: [🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
  prsg: &prsg {type: select, proxies: [🇸🇬 新加坡, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
  prjp: &prjp {type: select, proxies: [🇯🇵 日本, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
  prdirect: &prdirect {type: select, proxies: [直连, 🚀 默认代理, 🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点]}
  prads: &prads {type: select, proxies: [REJECT, 直连, 🚀 默认代理, 🌐 全部节点]}

  filterhk: &filterhk {include-all: true, filter: "(?i)香港"}
  filtersg: &filtersg {include-all: true, filter: "(?i)新加坡"}
  filtertw: &filtertw {include-all: true, filter: "(?i)台湾"}
  filterjp: &filterjp {include-all: true, filter: "(?i)日本"}
  filterus: &filterus {include-all: true, filter: "(?i)美国"}
  filterother: &filterother {include-all: true, filter: "^(?!.*(香港|新加坡|台湾|日本|美国)).*$"}

  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [🇭🇰 香港, 🇹🇼 台湾, 🇸🇬 新加坡, 🇯🇵 日本, 🇺🇸 美国, 🇺🇳 其它, 🌐 全部节点, 直连]}
  - {<<: *prads, name: 🛑 广告}
  - {<<: *prdirect, name: 🎯 直连}
  - {<<: *pr, name: 📹 YouTube}
  - {<<: *pr, name: 🍀 Google}
  - {<<: *prsg, name: 🤖 AI}
  - {<<: *pr, name: 🍎 Apple}
  - {<<: *prdirect, name: 🍎 Apple 中国}
  - {<<: *pr, name: 🐬 OneDrive}
  - {<<: *pr, name: 🪟 Microsoft}
  - {<<: *prdirect, name: 🪟 Microsoft 中国}
  - {<<: *prjp, name: 🎵 TikTok}
  - {<<: *prsg, name: 📲 Telegram}
  - {<<: *prsg, name: 🎥 NETFLIX}
  - {<<: *pr, name: 👨🏿‍💻 GitHub}
  - {<<: *pr, name: 🎮 游戏平台}
  - {<<: *prdirect, name: 🎮 游戏下载}
  - {<<: *prdirect, name: ✈️ Speedtest}
  - {<<: *pr, name: 🐟 漏网之鱼}

  - {name: 🇭🇰 香港, type: select, proxies: [🔁 🇭🇰 香港故转, 🌐 🇭🇰 香港自动, ✅ 🇭🇰 香港手动]}
  - {name: 🇸🇬 新加坡, type: select, proxies: [🔁 🇸🇬 新加坡故转, 🌐 🇸🇬 新加坡自动, ✅ 🇸🇬 新加坡手动]}
  - {<<: *filtertw, name: 🇹🇼 台湾, type: select}
  - {<<: *filterjp, name: 🇯🇵 日本, type: select}
  - {<<: *filterus, name: 🇺🇸 美国, type: select}
  - {<<: *filterother, name: 🇺🇳 其它, type: select}

  - {<<: *filterhk, name: ✅ 🇭🇰 香港手动, type: select}
  - {<<: *filterhk, name: 🔁 🇭🇰 香港故转, type: fallback, tolerance: 20, interval: 300}
  - {<<: *filterhk, name: 🌐 🇭🇰 香港自动, type: url-test, tolerance: 20, interval: 300}

  - {<<: *filtersg, name: ✅ 🇸🇬 新加坡手动, type: select}
  - {<<: *filtersg, name: 🔁 🇸🇬 新加坡故转, type: fallback, tolerance: 20, interval: 300}
  - {<<: *filtersg, name: 🌐 🇸🇬 新加坡自动, type: url-test, tolerance: 20, interval: 300}

  - {name: 🌐 全部节点, type: select, include-all: true}


# mrs 转换: mihomo convert-ruleset [domain|ip] [yaml|text] source.yaml tartet.mrs